# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := ass_measure
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=ass_measure' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DNAPI_DISABLE_CPP_EXCEPTIONS' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=11.0 \
	-arch arm64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing \
	-I/opt/homebrew/Cellar/libass/0.17.3/include \
	-I/opt/homebrew/Cellar/libunibreak/6.1/include \
	-I/opt/homebrew/Cellar/harfbuzz/10.0.1_2/include/harfbuzz \
	-I/opt/homebrew/Cellar/glib/2.82.2/include/glib-2.0 \
	-I/opt/homebrew/Cellar/glib/2.82.2/lib/glib-2.0/include \
	-I/opt/homebrew/opt/gettext/include \
	-I/opt/homebrew/Cellar/pcre2/10.44/include \
	-I/opt/homebrew/Cellar/graphite2/1.3.14/include \
	-I/opt/homebrew/Cellar/fribidi/1.0.16/include/fribidi \
	-I/opt/homebrew/opt/freetype/include/freetype2 \
	-I/opt/homebrew/opt/libpng/include/libpng16

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=c++11 \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-strict-aliasing \
	-I/opt/homebrew/Cellar/libass/0.17.3/include \
	-I/opt/homebrew/Cellar/libunibreak/6.1/include \
	-I/opt/homebrew/Cellar/harfbuzz/10.0.1_2/include/harfbuzz \
	-I/opt/homebrew/Cellar/glib/2.82.2/include/glib-2.0 \
	-I/opt/homebrew/Cellar/glib/2.82.2/lib/glib-2.0/include \
	-I/opt/homebrew/opt/gettext/include \
	-I/opt/homebrew/Cellar/pcre2/10.44/include \
	-I/opt/homebrew/Cellar/graphite2/1.3.14/include \
	-I/opt/homebrew/Cellar/fribidi/1.0.16/include/fribidi \
	-I/opt/homebrew/opt/freetype/include/freetype2 \
	-I/opt/homebrew/opt/libpng/include/libpng16

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/include/node \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/src \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/deps/openssl/config \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/deps/openssl/openssl/include \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/deps/uv/include \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/deps/zlib \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/deps/v8/include \
	-I/Users/montabogota/projects/roundedjs/ass-measure/binding/node_modules/node-addon-api \
	-I$(srcdir)/../include

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=ass_measure' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DNAPI_DISABLE_CPP_EXCEPTIONS' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-O3 \
	-gdwarf-2 \
	-mmacosx-version-min=11.0 \
	-arch arm64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing \
	-I/opt/homebrew/Cellar/libass/0.17.3/include \
	-I/opt/homebrew/Cellar/libunibreak/6.1/include \
	-I/opt/homebrew/Cellar/harfbuzz/10.0.1_2/include/harfbuzz \
	-I/opt/homebrew/Cellar/glib/2.82.2/include/glib-2.0 \
	-I/opt/homebrew/Cellar/glib/2.82.2/lib/glib-2.0/include \
	-I/opt/homebrew/opt/gettext/include \
	-I/opt/homebrew/Cellar/pcre2/10.44/include \
	-I/opt/homebrew/Cellar/graphite2/1.3.14/include \
	-I/opt/homebrew/Cellar/fribidi/1.0.16/include/fribidi \
	-I/opt/homebrew/opt/freetype/include/freetype2 \
	-I/opt/homebrew/opt/libpng/include/libpng16

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=c++11 \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-strict-aliasing \
	-I/opt/homebrew/Cellar/libass/0.17.3/include \
	-I/opt/homebrew/Cellar/libunibreak/6.1/include \
	-I/opt/homebrew/Cellar/harfbuzz/10.0.1_2/include/harfbuzz \
	-I/opt/homebrew/Cellar/glib/2.82.2/include/glib-2.0 \
	-I/opt/homebrew/Cellar/glib/2.82.2/lib/glib-2.0/include \
	-I/opt/homebrew/opt/gettext/include \
	-I/opt/homebrew/Cellar/pcre2/10.44/include \
	-I/opt/homebrew/Cellar/graphite2/1.3.14/include \
	-I/opt/homebrew/Cellar/fribidi/1.0.16/include/fribidi \
	-I/opt/homebrew/opt/freetype/include/freetype2 \
	-I/opt/homebrew/opt/libpng/include/libpng16

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/include/node \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/src \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/deps/openssl/config \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/deps/openssl/openssl/include \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/deps/uv/include \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/deps/zlib \
	-I/Users/montabogota/Library/Caches/node-gyp/22.6.0/deps/v8/include \
	-I/Users/montabogota/projects/roundedjs/ass-measure/binding/node_modules/node-addon-api \
	-I$(srcdir)/../include

OBJS := \
	$(obj).target/$(TARGET)/src/binding.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/nothing.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-framework CoreFoundation \
	-framework CoreGraphics \
	-L/opt/homebrew/Cellar/libass/0.17.3/lib \
	-lass \
	-undefined dynamic_lookup \
	-Wl,-search_paths_first \
	-mmacosx-version-min=11.0 \
	-arch arm64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Debug := \
	-framework CoreFoundation \
	-framework CoreGraphics \
	-L/opt/homebrew/Cellar/libass/0.17.3/lib \
	-lass \
	-undefined dynamic_lookup \
	-Wl,-search_paths_first

LDFLAGS_Release := \
	-framework CoreFoundation \
	-framework CoreGraphics \
	-L/opt/homebrew/Cellar/libass/0.17.3/lib \
	-lass \
	-undefined dynamic_lookup \
	-Wl,-search_paths_first \
	-mmacosx-version-min=11.0 \
	-arch arm64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Release := \
	-framework CoreFoundation \
	-framework CoreGraphics \
	-L/opt/homebrew/Cellar/libass/0.17.3/lib \
	-lass \
	-undefined dynamic_lookup \
	-Wl,-search_paths_first

LIBS := \
	-lass

$(builddir)/ass_measure.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/ass_measure.node: LIBS := $(LIBS)
$(builddir)/ass_measure.node: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/ass_measure.node: TOOLSET := $(TOOLSET)
$(builddir)/ass_measure.node: $(OBJS) $(builddir)/nothing.a FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(builddir)/ass_measure.node
# Add target alias
.PHONY: ass_measure
ass_measure: $(builddir)/ass_measure.node

# Short alias for building this executable.
.PHONY: ass_measure.node
ass_measure.node: $(builddir)/ass_measure.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/ass_measure.node

